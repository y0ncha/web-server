{
  "info": {
    "name": "Web Server Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "GET /health",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/health",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["health"]
        }
      },
      "description": "Health check endpoint",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Body contains assignment string\", function () {",
              "    pm.expect(pm.response.text()).to.include(\"Computer Networks Web Server Assignment\");",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "GET / (default index.html)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": [""]
        }
      },
      "description": "Loads index.html",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Content-Type is text/html\", function () {",
              "    pm.response.to.have.header(\"Content-Type\", \"text/html\");",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "GET /about?lang=fr",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/about?lang=fr",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["about"],
          "query": [{ "key": "lang", "value": "fr" }]
        }
      },
      "description": "Shows parameterized fetch",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.expect([200]).to.include(pm.response.code);",
              "});",
              "pm.test(\"Content-Type is text/html\", function () {",
              "    pm.response.to.have.header(\"Content-Type\", \"text/html\");",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "POST /echo (missing body)",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "text/plain" }],
        "body": { "mode": "raw", "raw": "" },
        "url": {
          "raw": "http://localhost:8080/echo",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["echo"]
        }
      },
      "description": "POST /echo with empty body",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Body is empty\", function () {",
              "    pm.response.to.have.body(\"\");",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "POST /echo",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "text/plain" }],
        "body": { "mode": "raw", "raw": "This is a test body" },
        "url": {
          "raw": "http://localhost:8080/echo",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["echo"]
        }
      },
      "description": "POST /echo with body",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Content-Type is text/plain\", function () {",
              "    pm.response.to.have.header(\"Content-Type\", \"text/plain\");",
              "});",
              "pm.test(\"Body matches input\", function () {",
              "    pm.response.to.have.body(\"This is a test body\");",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "POST /unknown",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "text/plain" }],
        "body": { "mode": "raw", "raw": "Some data" },
        "url": {
          "raw": "http://localhost:8080/unknown",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["unknown"]
        }
      },
      "description": "Invalid POST endpoint",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "PUT /data (create new file)",
      "request": {
        "method": "PUT",
        "header": [{ "key": "Content-Type", "value": "text/plain" }],
        "body": { "mode": "raw", "raw": "Hello world" },
        "url": {
          "raw": "http://localhost:8080/data",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["data"]
        }
      },
      "description": "Tests file creation",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Content-Type is text/plain\", function () {",
              "    pm.response.to.have.header(\"Content-Type\", \"text/plain\");",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "DELETE /data (file exists)",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/data",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["data"]
        }
      },
      "description": "Tests deletion",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "DELETE /data (file does not exist)",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/data",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["data"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 404\", function () {",
              "    pm.response.to.have.status(404);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "DELETE /about (invalid extension)",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/about",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["about"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "DELETE /invalid/path (invalid path)",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/invalid/path",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["invalid", "path"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "PUT / (root, invalid)",
      "request": {
        "method": "PUT",
        "header": [{ "key": "Content-Type", "value": "text/plain" }],
        "body": { "mode": "raw", "raw": "Should fail" },
        "url": {
          "raw": "http://localhost:8080/",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": [""]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "PUT /index (create .txt file)",
      "request": {
        "method": "PUT",
        "header": [{ "key": "Content-Type", "value": "text/plain" }],
        "body": { "mode": "raw", "raw": "Index file content" },
        "url": {
          "raw": "http://localhost:8080/index",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["index"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 201 or 200\", function () {",
              "    pm.expect([201,200]).to.include(pm.response.code);",
              "});",
              "pm.test(\"Content-Type is text/plain\", function () {",
              "    pm.response.to.have.header(\"Content-Type\", \"text/plain\");",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "DELETE /index (delete .txt file)",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/index",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["index"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200 or 404\", function () {",
              "    pm.expect([200,404]).to.include(pm.response.code);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "PUT /about (create .txt file)",
      "request": {
        "method": "PUT",
        "header": [{ "key": "Content-Type", "value": "text/plain" }],
        "body": { "mode": "raw", "raw": "About file content" },
        "url": {
          "raw": "http://localhost:8080/about",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["about"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 201 or 200\", function () {",
              "    pm.expect([201,200]).to.include(pm.response.code);",
              "});",
              "pm.test(\"Content-Type is text/plain\", function () {",
              "    pm.response.to.have.header(\"Content-Type\", \"text/plain\");",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "DELETE /about (delete .txt file)",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/about",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["about"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200 or 404\", function () {",
              "    pm.expect([200,404]).to.include(pm.response.code);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "PUT /data (create for HEAD test)",
      "request": {
        "method": "PUT",
        "header": [{ "key": "Content-Type", "value": "text/plain" }],
        "body": { "mode": "raw", "raw": "HEAD test content" },
        "url": {
          "raw": "http://localhost:8080/data",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["data"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200 or 201\", function () {",
              "    pm.expect([200,201]).to.include(pm.response.code);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "GET /data (for HEAD comparison)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/data",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["data"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.environment.set(\"get_content_length\", pm.response.headers.get(\"Content-Length\"));",
              "pm.environment.set(\"get_content_type\", pm.response.headers.get(\"Content-Type\"));",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "HEAD /data (compare headers with GET)",
      "request": {
        "method": "HEAD",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/data",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["data"]
        }
      },
      "description": "Checks header match",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Body is empty for HEAD\", function () {",
              "    pm.expect(pm.response.text()).to.eql(\"\");",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "GET /mytest (fetch .txt file)",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/mytest",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["mytest"]
        }
      },
      "description": "GET from .txt file (confirm PUT worked)",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Content-Type is text/plain\", function () {",
              "    pm.response.to.have.header(\"Content-Type\", \"text/plain\");",
              "});",
              "pm.test(\"Body matches PUT content\", function () {",
              "    pm.response.to.have.body(\"This is a test file.\");",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "TRACE /empty (empty body, custom header)",
      "request": {
        "method": "TRACE",
        "header": [{ "key": "X-Empty-Header", "value": "EmptyValue" }],
        "body": { "mode": "raw", "raw": "" },
        "url": {
          "raw": "http://localhost:8080/empty",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["empty"]
        }
      },
      "description": "Confirm empty body + headers echo",
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Body contains custom header\", function () {",
              "    pm.expect(pm.response.text()).to.include(\"X-Empty-Header: EmptyValue\");",
              "});"
            ]
          }
        }
      ]
    }
  ]
}